// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Calendar",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/events": {
      "get": {
        "tags": [
          "event"
        ],
        "operationId": "List",
        "parameters": [
          {
            "type": "string",
            "name": "date",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Active event list by date",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "tags": [
          "event"
        ],
        "operationId": "Create",
        "parameters": [
          {
            "name": "event",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event Created",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/remove/{ID}": {
      "get": {
        "tags": [
          "event"
        ],
        "operationId": "Remove",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Event removed"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Event Not Found"
          }
        }
      }
    },
    "/events/update/{ID}": {
      "post": {
        "tags": [
          "event"
        ],
        "operationId": "Update",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "event",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event Updated"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Event Not Found"
          }
        }
      }
    },
    "/events/{eventID}": {
      "get": {
        "tags": [
          "event"
        ],
        "operationId": "Get",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "eventID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Event get",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Event Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "Event": {
      "type": "object",
      "required": [
        "date",
        "duration",
        "description"
      ],
      "properties": {
        "date": {
          "type": "string",
          "example": "2019-09-07 08:20:00"
        },
        "description": {
          "type": "string",
          "example": "сдать домашку"
        },
        "duration": {
          "type": "integer",
          "format": "int64",
          "example": 5
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Calendar",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/events": {
      "get": {
        "tags": [
          "event"
        ],
        "operationId": "List",
        "parameters": [
          {
            "type": "string",
            "name": "date",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Active event list by date",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "tags": [
          "event"
        ],
        "operationId": "Create",
        "parameters": [
          {
            "name": "event",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event Created",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/remove/{ID}": {
      "get": {
        "tags": [
          "event"
        ],
        "operationId": "Remove",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Event removed"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Event Not Found"
          }
        }
      }
    },
    "/events/update/{ID}": {
      "post": {
        "tags": [
          "event"
        ],
        "operationId": "Update",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "event",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event Updated"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Event Not Found"
          }
        }
      }
    },
    "/events/{eventID}": {
      "get": {
        "tags": [
          "event"
        ],
        "operationId": "Get",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "eventID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Event get",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Event Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "Event": {
      "type": "object",
      "required": [
        "date",
        "duration",
        "description"
      ],
      "properties": {
        "date": {
          "type": "string",
          "example": "2019-09-07 08:20:00"
        },
        "description": {
          "type": "string",
          "example": "сдать домашку"
        },
        "duration": {
          "type": "integer",
          "format": "int64",
          "example": 5
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    }
  }
}`))
}
